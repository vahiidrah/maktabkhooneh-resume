{"version":3,"sources":["component/Fullpage.js","component/ArrowDown.js","sections/TitlesAndIcons.js","sections/About.js","component/SkillCard.js","component/ArrowUp.js","sections/Skill.js","sections/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","className","Component","ArrowDown","style","onClick","TitlesAndIcons","up","setState","transform","transition","cursor","down","state","name","onMouseOver","onMouseLeave","data","title","subtitle","Object","keys","links","map","key","url","to","spy","smooth","duration","display","animationName","animationDuration","animationIterationCount","About","section","items","content","SkillCard","skill","height","src","image","alt","Skill","width","eachSkill","Navigation","checked","localStorage","getItem","theme","toggleThemeChange","setItem","document","getElementsByClassName","setAttribute","class","type","defaultChecked","onChange","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b3c1e372.chunk.js","sourcesContent":["import React , { Component } from \"react\"\r\nimport \"./Fullpage.css\"\r\n\r\nclass Fullpage extends Component {\r\n    render() {\r\n        const { children } = this.props\r\n        return [\r\n            <div className={`fullpage ${this.props.className || ''}`}>\r\n                { children }\r\n            </div>\r\n        ]\r\n    }\r\n}\r\n\r\nexport default Fullpage","import React, { Component } from \"react\";\r\nimport { FaChevronDown } from \"react-icons/fa\";\r\nimport \"./ArrowDown.css\";\r\n\r\nclass ArrowDown extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.style = props.style\r\n    }\r\n  render() {\r\n    return [\r\n      <div className=\"arrow text-center\">\r\n        <button\r\n          className=\"bg-transparent border-0\"\r\n          onClick={this.props.onClick}\r\n          style={this.props.style}\r\n        >\r\n          <FaChevronDown />\r\n        </button>\r\n      </div>,\r\n    ];\r\n  }\r\n}\r\n\r\nexport default ArrowDown","import React, { Component } from \"react\";\r\nimport Fullpage from \"../component/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport \"./TitlesAndIcons.css\";\r\nimport ArrowDown from \"../component/ArrowDown\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass TitlesAndIcons extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      transform: \"\",\r\n      transition: \"\",\r\n      cursor: \"\",\r\n    };\r\n  }\r\n  up = () => {\r\n    this.setState({\r\n      transform: \"translateY(-5px)\",\r\n      transition: \"1s\",\r\n      cursor: \"pointer\",\r\n    });\r\n  };\r\n  down = () => {\r\n    this.setState({\r\n      transform: \"translateY(0px)\",\r\n      transition: \"1s\",\r\n      cursor: \"pointer\",\r\n    });\r\n  };\r\n  render() {\r\n    return [\r\n    <Element name=\"title\" className=\"element p-0 m-0\"></Element>,\r\n      <div>\r\n        <Fullpage className=\"top\">\r\n          <h1\r\n            className=\"title text-light\"\r\n            onMouseOver={this.up}\r\n            onMouseLeave={this.down}\r\n            style={{\r\n              transform: this.state.transform,\r\n              transition: this.state.transition,\r\n              cursor: this.state.cursor,\r\n            }}\r\n          >\r\n            {data.title}\r\n          </h1>\r\n          <h4 className=\"text-warning\">{data.subtitle}</h4>\r\n          <div>\r\n            {Object.keys(data.links).map((key) => {\r\n              return [\r\n                <div className=\"icon\">\r\n                  <SocialIcon url={data.links[key]} />\r\n                </div>,\r\n              ];\r\n            })}\r\n          </div>\r\n          <Link\r\n            className=\"test6\"\r\n            to=\"about\"\r\n            spy={true}\r\n            smooth={true}\r\n            duration={500}\r\n          >\r\n            <ArrowDown\r\n              style={{\r\n                transform: \"translateY(270px)\",\r\n                display: \"inline-block\",\r\n                animationName: \"arrowDown\",\r\n                animationDuration: \"1.5s\",\r\n                animationIterationCount: \"infinite\",\r\n              }}\r\n            />\r\n          </Link>\r\n        </Fullpage>\r\n        <Element name=\"about\" className=\"element p-0 m-0\"></Element>\r\n      </div>,\r\n    ];\r\n  }\r\n}\r\n\r\nexport default TitlesAndIcons;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../component/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport \"./About.css\";\r\nimport ArrowDown from \"../component/ArrowDown\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return [\r\n      <Fullpage className=\"about\">\r\n        <h3 className=\"text-center mb-4 pt-4\">{data.section[0].title}</h3>\r\n        <p>{data.section[0].items[0].content}</p>\r\n        <Link\r\n          className=\"test6\"\r\n          to=\"skills\"\r\n          spy={true}\r\n          smooth={true}\r\n          duration={500}\r\n        >\r\n          <ArrowDown           \r\n          style={{\r\n            transform: \"translateY(270px)\",\r\n            display: \"inline-block\",\r\n            animationName: \"arrowDownAbout\",\r\n            animationDuration: \"1.5s\",\r\n            animationIterationCount: \"infinite\",\r\n          }}/>\r\n        </Link>\r\n      </Fullpage>,\r\n      <Element name=\"skills\" className=\"element p-0 m-0\"></Element>,\r\n    ];\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport \"../component/SkillCard.css\";\r\n\r\nclass SkillCard extends Component {\r\n  render() {\r\n    const { skill } = this.props;\r\n    return [\r\n      <div className=\"col-6 col-md-3\">\r\n        <div className=\"card mb-4\">\r\n          <div className=\"card-img-top\" style={{ height: \"180px\" }}>\r\n            <img\r\n              className=\"img-fluid img\"\r\n              src={data.section[1].items[skill].content.image}\r\n              alt=\"skill\"\r\n            />\r\n          </div>\r\n          <div className=\"card-body font-weight-bold pb-2\">\r\n            {data.section[1].items[skill].content.title}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ];\r\n  }\r\n}\r\n\r\nexport default SkillCard;\r\n","import React, { Component } from \"react\";\r\nimport { FaChevronUp } from \"react-icons/fa\";\r\nimport \"./ArrowUp.css\";\r\n\r\nclass ArrowDown extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.style = props.style\r\n    }\r\n  render() {\r\n    return [\r\n      <div className=\"arrow text-center\">\r\n        <button\r\n          className=\"bg-transparent border-0\"\r\n          onClick={this.props.onClick}\r\n          style={this.props.style}\r\n        >\r\n          <FaChevronUp />\r\n        </button>\r\n      </div>,\r\n    ];\r\n  }\r\n}\r\n\r\nexport default ArrowDown","import React, { Component } from \"react\";\r\nimport Fullpage from \"../component/Fullpage\";\r\nimport SkillCard from \"../component/SkillCard\";\r\nimport data from \"../data.json\";\r\nimport \"./Skill.css\";\r\nimport ArrowUp from \"../component/ArrowUp\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nclass Skill extends Component {\r\n  render() {\r\n    return [\r\n      <Fullpage className=\"bg-color skills\">\r\n        <h3\r\n          className=\"text-center pt-2 d-inline-block mb-4\"\r\n          style={{ height: \"50px\", width: \"90px\" }}\r\n        >\r\n          {data.section[1].title}\r\n        </h3>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            {Object.keys(data.section[1].items).map((eachSkill) => {\r\n              return [\r\n                <SkillCard skill={eachSkill} />\r\n              ];\r\n            })}\r\n          </div>\r\n        </div>\r\n        <Link\r\n            className=\"test6\"\r\n            to=\"title\"\r\n            spy={true}\r\n            smooth={true}\r\n            duration={500}\r\n          >\r\n            <ArrowUp\r\n              style={{\r\n                transform: \"translateY(270px)\",\r\n                display: \"inline-block\",\r\n                animationName: \"arrowUp\",\r\n                animationDuration: \"1.5s\",\r\n                animationIterationCount: \"infinite\",\r\n              }}\r\n            />\r\n          </Link>\r\n      </Fullpage>\r\n    ];\r\n  }\r\n}\r\n\r\nexport default Skill;\r\n","import React, { Component } from \"react\";\r\nimport \"./Navigation.css\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nclass Navigation extends Component {\r\n  state = {\r\n    checked: localStorage.getItem(\"theme\") === \"dark\" ? true : false,\r\n    theme: localStorage.getItem(\"theme\"),\r\n  };\r\n\r\n  componentDidMount() {\r\n    document\r\n      .getElementsByClassName(\"top\")[0]\r\n      .setAttribute(\"data-theme\", localStorage.getItem(\"theme\"));\r\n    document\r\n      .getElementsByClassName(\"about\")[0]\r\n      .setAttribute(\"data-theme\", localStorage.getItem(\"theme\"));\r\n    document\r\n      .getElementsByClassName(\"skills\")[0]\r\n      .setAttribute(\"data-theme\", localStorage.getItem(\"theme\"));\r\n  }\r\n\r\n  toggleThemeChange = () => {\r\n    const { checked } = this.state;\r\n    if (checked === false) {\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n\r\n      document\r\n        .getElementsByClassName(\"top\")[0]\r\n        .setAttribute(\"data-theme\", localStorage.getItem(\"theme\"));\r\n      document\r\n        .getElementsByClassName(\"about\")[0]\r\n        .setAttribute(\"data-theme\", localStorage.getItem(\"theme\"));\r\n      document\r\n        .getElementsByClassName(\"skills\")[0]\r\n        .setAttribute(\"data-theme\", localStorage.getItem(\"theme\"));\r\n      this.setState({\r\n        checked: true,\r\n      });\r\n    } else {\r\n      localStorage.setItem(\"theme\", \"light\");\r\n\r\n      document\r\n        .getElementsByClassName(\"top\")[0]\r\n        .setAttribute(\"data-theme\", localStorage.getItem(\"theme\"));\r\n      document\r\n        .getElementsByClassName(\"about\")[0]\r\n        .setAttribute(\"data-theme\", localStorage.getItem(\"theme\"));\r\n      document\r\n        .getElementsByClassName(\"skills\")[0]\r\n        .setAttribute(\"data-theme\", localStorage.getItem(\"theme\"));\r\n      this.setState({\r\n        checked: false,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return [\r\n      <div className=\"navigation fixed-top\">\r\n        <nav class=\"navbar navbar-dark text-light bg-dark\">\r\n          <div class=\" navbarNavAltMarkup\">\r\n            <div class=\"\">\r\n              <Link\r\n                className=\"test6\"\r\n                to=\"about\"\r\n                spy={true}\r\n                smooth={true}\r\n                duration={500}\r\n              >\r\n                <button class=\"nav-item nav-link text-light bg-transparent border-0 d-inline-block\">\r\n                  About\r\n                </button>\r\n              </Link>\r\n\r\n              <Link\r\n                className=\"test6\"\r\n                to=\"skills\"\r\n                spy={true}\r\n                smooth={true}\r\n                duration={500}\r\n              >\r\n                <button class=\"nav-item nav-link text-light bg-transparent border-0 d-inline-block\">\r\n                  Skills\r\n                </button>\r\n              </Link>\r\n\r\n              <header className=\"App-header d-inline-block\">\r\n                <label class=\"switch\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    defaultChecked={this.state.checked}\r\n                    onChange={() => this.toggleThemeChange()}\r\n                  />\r\n                  <span class=\"slider round\" />\r\n                </label>\r\n              </header>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>,\r\n    ];\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport TitlesAndIcons from \"./sections/TitlesAndIcons\";\nimport About from \"./sections/About\";\nimport Skill from \"./sections/Skill\";\nimport Navigation from \"./sections/Navigation\";\nimport SnowStorm from 'react-snowstorm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SnowStorm />\n      <Navigation />\n      <TitlesAndIcons />\n      <About />\n      <Skill />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}